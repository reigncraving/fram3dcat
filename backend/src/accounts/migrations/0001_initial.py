# Generated by Django 3.1 on 2021-01-07 11:05

import django.contrib.auth.models
from django.db import migrations, models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, default=' ', max_length=100)),
                ('last_name', models.CharField(blank=True, default=' ', max_length=100)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_logged_in', models.DateField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, default='defaultPicUser.png', null=True, upload_to='')),
                ('skills', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(' ', ' '), ('QUICKLEARNER', 'Quick learner'), ('ARTISTIC', 'Artistic skills'), ('TIME_MANAGEMENT', 'Time management'), ('TEAMWORK', 'Teamwork'), ('COMMUNICATION', 'Communication'), ('ENGINEERING', 'Engineering')], default=' ', max_length=74)),
                ('work_fields', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(' ', ' '), ('RIGGING', 'Rigging'), ('MODELLING', 'Modeling'), ('VFX', 'Visual effects'), ('TEXTURING', 'Texturing'), ('ANIMATION', 'Animation'), ('FILM', 'Film and Media Arts'), ('GAME_DESIGN', 'Games design'), ('RENDERING', 'Rendering artist'), ('LIGHTNING', 'Lightning artist'), ('BACKGROUND', 'Background artist'), ('GRAPHIC_DESING', 'Graphic design'), ('PRODUCT_DESIGN', 'Product design'), ('CHARACTER_DESIGN', 'Character design'), ('WEBSITE_DESIGNER', '3D website design'), ('INTERACTIVE_DESIGN', 'Interactive design'), ('CHARACTER_ANIMATATION', 'Character Animation')], default=' ', max_length=196)),
                ('tools', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(' ', ' '), ('MAX', 'Autodesk 3ds Max'), ('MAYA', 'Autodesk Maya'), ('CINEMA', 'Cinema 4D'), ('AE', 'Adobe After Effects'), ('PS', 'Adobe Photoshop'), ('BLENDER', 'Blender'), ('LIGHTWAVE', 'LightWave'), ('ZBrush', 'ZBrush')], default=' ', max_length=48)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('possition', models.CharField(blank=True, max_length=100)),
                ('website', models.CharField(blank=True, max_length=100)),
                ('address_line', models.CharField(blank=True, max_length=100)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_designer', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
